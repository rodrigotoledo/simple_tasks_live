# frozen_string_literal: true

require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe 'Operations for categerories' do
  # Category. As you add validations to Category, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    attributes_for(:category)
  end

  let(:invalid_attributes) do
    { title: '' }
  end

  before do
    create_user_and_log_in
  end

  describe 'GET /index' do
    it 'renders a successful response' do
      category = create(:category)
      click_link 'Categories'
      expect(page).to have_content(category.title)
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      category = Category.create! valid_attributes
      click_link 'Categories'
      click_link category.title
      expect(page).to have_content("Editing category: #{category.title}")
    end
  end

  describe 'GET /edit' do
    it 'render a successful response' do
      category = Category.create! valid_attributes
      new_attributes = attributes_for(:category)
      click_link 'Categories'
      click_link category.title
      fill_in "Title",	with: new_attributes[:title]
      click_button 'Update Category'
      expect(page).to have_content("Category was successfully updated.")
      expect(page).to have_content(new_attributes[:title])
    end
  end

  describe 'DELETE /destroy' do
    it 'should destroy company' do
      create(:category, title: "faker")
      click_link 'Categories'
      expect(page).to have_content("faker")
      click_on "Remove: faker"
      expect(page).to have_no_content("faker")
    end
  end
end
